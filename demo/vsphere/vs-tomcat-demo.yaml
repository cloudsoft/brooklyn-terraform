location: localhost
name: Apache Tomcat + MySQL on VSphere Demo
services:
- type: terraform
  name: Terraform Configuration
  brooklyn.config:
    tomcat.vm.name: terraform-tomcat-vm
    db.vm.name: terraform-mysql-vm
    tf.configuration.url: https://github.com/iuliana/vs-tomcat/releases/latest/download/vs-tomcat.zip
    # populate with the proper credentials
    tf.tfvars.url: https://XXX:XXX@artifactory.cloudsoftcorp.com/artifactory/libs-release-local/io/cloudsoft/amp/vs-terraform.tfvars
    shell.env:
      TF_VAR_tomcat_vm_name: '$brooklyn:config("tomcat.vm.name")'
      TF_VAR_db_vm_name: '$brooklyn:config("db.vm.name")'
  brooklyn.parameters:
    - name: tomcat.vm.name
      type: string
      reconfigurable: true
    - name: db.vm.name
      type: string
      reconfigurable: true
  brooklyn.initializers:
    - type: terraform-drift-compliance-check
      brooklyn.config:
        terraform.resources-drift.enabled: true
- type: org.apache.brooklyn.entity.group.DynamicGroup
  name: VSphere VMs
  brooklyn.config:
    dynamicgroup.entityfilter:
      sensor: tf.resource.type
      equal: vsphere_virtual_machine
#      $brooklyn:object:
#        type: terraform-predicate-resource-type
#        constructor.args:
#         - "vsphere_virtual_machine"
