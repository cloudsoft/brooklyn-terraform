location: localhost
name: Apache Tomcat + MySQL on VSPhere
services:
- type: terraform
  name: Terraform Configuration
  brooklyn.config:
    tomcat.vm.name: terraform-tomcat-vm
    db.vm.name: terraform-mysql-vm
    tf.configuration.url: https://github.com/iuliana/vs-tomcat/releases/latest/download/vs-tomcat.zip
    # populate with the proper credentials
    tf.tfvars.url: https://XXX:XXX@artifactory.cloudsoftcorp.com/artifactory/libs-release-local/io/cloudsoft/amp/vs-terraform.tfvars
    shell.env:
      TF_VAR_tomcat_vm_name: '$brooklyn:config("tomcat.vm.name")'
      TF_VAR_db_vm_name: '$brooklyn:config("db.vm.name")'
  brooklyn.parameters:
    - name: tomcat.vm.name
      type: string
      reconfigurable: true
    - name: db.vm.name
      type: string
      reconfigurable: true
- type: org.apache.brooklyn.entity.group.DynamicGroup
  name: VSphere VMs
  brooklyn.config:
    dynamicgroup.entityfilter:
      '$brooklyn:object':
        type: io.cloudsoft.terraform.predicates.TerraformDiscoveryPredicates
        factoryMethod.name: sensorMatches
        factoryMethod.args:
        - tf.resource.type
        - vsphere_virtual_machine