version: 2.1

# An executor type defines the underlying technology or environment in which to run a job.
executors:
  tf-executor: # default executor image for most cloudsoft projects
    docker:
    - image: $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_ORGANIZATION/$DOCKER_IMAGE_ID
      auth:
        username: $DOCKER_REGISTRY_USERNAME
        password: $DOCKER_REGISTRY_PASSWORD

orbs:
  slack: circleci/slack@4.4.4

slack-config:
  job-failed-notification: &job-failed-notification
    event: fail
    channel: 'amp-6-1'
    mentions: "<@Mateusz Zan>, <@Iuliana Cosmina>, @duncan.grant "
    custom: |
      {
        "blocks": [
          {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": ":rotating_light: _Uh-oh_, `brooklyn-terraform` is broken. Calling reinforcements! :technologist:"
            },
            "accessory": {
              "type": "button",
              "text": {
                "type": "plain_text",
                "text": "Investigate",
                "emoji": true
              },
              "url": "${CIRCLE_BUILD_URL}",
              "action_id": "investigate-build-failure"
            }
          },
          {
            "type": "section",
            "fields": [
              {
                "type": "mrkdwn",
                "text": "*Job*\n ${CIRCLE_JOB}"
              },
              {
                "type": "mrkdwn",
                "text": "*Branch*\n ${CIRCLE_BRANCH}"
              },
              {
                "type": "mrkdwn",
                "text": "*Author*\n${CIRCLE_USERNAME}"
              },
              {
                "type": "mrkdwn",
                "text": "*Commit SHA*\n ${CIRCLE_SHA1}"
              }
            ]
          }
        ]
      }


commands: # re-usable as steps in any job in this config
  build:
    steps:
    # Checkout the code as the first step.
    - checkout
    # Use mvn clean and package as the standard maven build phase
    - run:
        name: Build
        command: mvn -s .circleci/circleci-m2-settings.xml -B -DskipTests clean package
    # Then run your unit tests!
    - run:
        name: Unit Test
        command: mvn -s .circleci/circleci-m2-settings.xml test
    # Run integration and live tests - require access to AWS
    - run:
        name: Live Test
        command: echo "Nothing to run yet!"
    - slack/notify:
        <<: *job-failed-notification

  deploy-cloudsoft:
    steps:
    - checkout
    - run:
        name: Build And Deploy Cloudsoft
        command: mvn -s .circleci/circleci-m2-settings.xml deploy
    - slack/notify:
        <<: *job-failed-notification

  deploy-sonatype:
    steps:
      - checkout
      - run:
          name: Build And Deploy Sonatype
          command: mvn -s .circleci/circleci-m2-settings.xml deploy -Pdeploy-sonatype
      - slack/notify:
          <<: *job-failed-notification

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    executor: tf-executor
    steps:
      - build

  deploy-cloudsoft:
    executor: tf-executor
    steps:
      - deploy-cloudsoft

  deploy-sonatype:
    executor: tf-executor
    steps:
      - deploy-sonatype

workflows:
  terraform-build-publish-cloudsoft:
    jobs:
    - build-and-test: # this builds everytime something changes on this repo
        context:
        - cloudsoft-artifactory
        - cloudsoft-sonatype
    - deploy-cloudsoft:
        requires:
          - build-and-test
        filters:
          branches:
            only: [ main ] # trigger only on main
        context:
          - cloudsoft-artifactory
          - cloudsoft-sonatype

  terraform-publish-all:
    triggers:
      - schedule:
          cron: "0 0 28 * *" # Fire at 00:00 on day-of-month 28.
          filters:
            branches:
              only: [ main ] # trigger only on main
    jobs:
      - build-and-test: # this builds everytime something changes on this repo
          context:
            - cloudsoft-artifactory
            - cloudsoft-sonatype
      - deploy-cloudsoft:
          requires:
            - build-and-test
          context:
            - cloudsoft-artifactory
            - cloudsoft-sonatype
      - deploy-sonatype:
          requires:
            - build-and-test
          context:
            - cloudsoft-artifactory
            - cloudsoft-sonatype

